{"ast":null,"code":"var _jsxFileName = \"/Users/Loki_Office/Downloads/MarvelAPI/src/pages/Chart/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport allActions from '../../store/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport { Container } from './style';\nexport default function ChartDemo() {\n  const [data, setData] = useState({});\n  const [selectedId, setSelectedId] = useState(0);\n  const [draggedContent, setDraggedContent] = useState(null);\n  const {\n    dataMarvel\n  } = useSelector(state => ({\n    dataMarvel: state.character\n  }));\n  const [index, setIndex] = useState(0);\n  dataMarvel.then(response => setData(response));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const getDataMarvel = () => {\n      dispatch(allActions.characterActions.requestGetMarvel());\n    };\n\n    getDataMarvel();\n  }, []);\n\n  const dragStart = index => {\n    setDraggedContent(index);\n  };\n\n  const captureDrag = (boxIndex, e) => {\n    e.preventDefault();\n    setSelectedId(draggedContent);\n  };\n\n  const dragOver = e => {\n    e.preventDefault();\n  };\n\n  const selectCharacter = index => {\n    setIndex(index);\n  };\n\n  const handleData = index => {\n    let mainData = data.data[index];\n    let prevData = index > 0 ? data.data[index - 1] : data.data[data.data.length - 1];\n    let nextData = data.data[index + 1];\n    let ad = [[prevData.comics.items.length, prevData.series.items.length], [mainData.comics.items.length, mainData.series.items.length], [nextData.comics.items.length, nextData.series.items.length]];\n    return [{\n      label: 'Events',\n      data: ad[0],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],\n      borderWidth: 1\n    }, {\n      label: 'Series',\n      data: ad[1],\n      backgroundColor: ['rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)'],\n      borderColor: ['rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\n      borderWidth: 1\n    }];\n  };\n\n  const handleLabel = index => {\n    let mainData = data.data[index];\n    let prevData = index > 0 ? data.data[index - 1] : data.data[data.data.length - 1];\n    let nextData = data.data[index + 1];\n    return [prevData.name, mainData.name, nextData.name];\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charecterList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, (data === null || data === void 0 ? void 0 : data.data) && data.data.map((item, ind) => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => selectCharacter(ind),\n    key: ind,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: index === ind ? 'selectedCharacter' : '',\n    alt: \"\",\n    src: `${item.thumbnail.path}.${item.thumbnail.extension}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"characterName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, item.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chartContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, (data === null || data === void 0 ? void 0 : data.data) && data.data[0] && /*#__PURE__*/React.createElement(Bar, {\n    height: 350,\n    width: 600,\n    data: {\n      labels: handleLabel(index),\n      datasets: handleData(index),\n      options: {\n        responsive: true,\n        animation: {},\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Loki_Office/Downloads/MarvelAPI/src/pages/Chart/index.js"],"names":["React","useState","useEffect","Bar","allActions","useDispatch","useSelector","Header","Footer","Container","ChartDemo","data","setData","selectedId","setSelectedId","draggedContent","setDraggedContent","dataMarvel","state","character","index","setIndex","then","response","dispatch","getDataMarvel","characterActions","requestGetMarvel","dragStart","captureDrag","boxIndex","e","preventDefault","dragOver","selectCharacter","handleData","mainData","prevData","length","nextData","ad","comics","items","series","label","backgroundColor","borderColor","borderWidth","handleLabel","name","map","item","ind","thumbnail","path","extension","labels","datasets","options","responsive","animation","scales","yAxes","ticks","beginAtZero"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport allActions from '../../store/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport { Container } from './style';\r\n\r\nexport default function ChartDemo() {\r\n  const [data, setData] = useState({});\r\n  const [selectedId, setSelectedId] = useState(0);\r\n  const [draggedContent, setDraggedContent] = useState(null)\r\n  const { dataMarvel } = useSelector(state => ({\r\n    dataMarvel: state.character\r\n  }));\r\n  const [index, setIndex] = useState(0);\r\n  dataMarvel.then(response => setData(response));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const getDataMarvel = () => {\r\n      dispatch(allActions.characterActions.requestGetMarvel());\r\n    };\r\n    getDataMarvel();\r\n  }, []);\r\n\r\n\r\n  const dragStart = (index) => {\r\n    setDraggedContent(index);\r\n  }\r\n\r\n  const captureDrag = (boxIndex, e) => {\r\n    e.preventDefault();\r\n    setSelectedId(draggedContent);\r\n  }\r\n\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const selectCharacter = index => {\r\n    setIndex(index);\r\n  };\r\n  const handleData = index => {\r\n    let mainData = data.data[index];\r\n    let prevData =\r\n      index > 0 ? data.data[index - 1] : data.data[data.data.length - 1];\r\n    let nextData = data.data[index + 1];\r\n    let ad = [\r\n      [prevData.comics.items.length, prevData.series.items.length],\r\n      [mainData.comics.items.length, mainData.series.items.length],\r\n      [nextData.comics.items.length, nextData.series.items.length]\r\n    ];\r\n    return [\r\n      {\r\n        label: 'Events',\r\n        data: ad[0],\r\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)'],\r\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],\r\n        borderWidth: 1\r\n      },\r\n      {\r\n        label: 'Series',\r\n        data: ad[1],\r\n        backgroundColor: [\r\n          'rgba(75, 192, 192, 0.2)',\r\n          'rgba(153, 102, 255, 0.2)'\r\n        ],\r\n        borderColor: ['rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\r\n        borderWidth: 1\r\n      }\r\n    ];\r\n  };\r\n  const handleLabel = index => {\r\n    let mainData = data.data[index];\r\n    let prevData =\r\n      index > 0 ? data.data[index - 1] : data.data[data.data.length - 1];\r\n    let nextData = data.data[index + 1];\r\n    return [prevData.name, mainData.name, nextData.name];\r\n  };\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <div className=\"listContainer\">\r\n          <div className=\"charecterList\">\r\n            {data?.data &&\r\n              data.data.map((item, ind) => (\r\n                <div onClick={() => selectCharacter(ind)} key={ind}>\r\n                  <div>\r\n                    <img\r\n                      className={index === ind ? 'selectedCharacter' : ''}\r\n                      alt=\"\"\r\n                      src={`${item.thumbnail.path}.${item.thumbnail.extension}`}\r\n                    />\r\n                  </div>\r\n                  <div className=\"characterName\">{item.name}</div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"chartContainer\">\r\n          {data?.data && data.data[0] && (\r\n            <Bar\r\n              height={350}\r\n              width={600}\r\n              data={{\r\n                labels: handleLabel(index),\r\n                datasets: handleData(index),\r\n                options: {\r\n                  responsive: true,\r\n                  animation: {},\r\n                  scales: {\r\n                    yAxes: [\r\n                      {\r\n                        ticks: {\r\n                          beginAtZero: true\r\n                        }\r\n                      }\r\n                    ]\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}