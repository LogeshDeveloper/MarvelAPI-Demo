{"ast":null,"code":"var _jsxFileName = \"/Users/Loki_Office/Downloads/MarvelAPI/src/pages/listCharecter/index.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container } from './style';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CollapsibleComponent, CollapsibleHead, CollapsibleContent } from \"react-collapsible-component\";\nimport allActions from '../../store/actions';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nexport default function ListCharacter() {\n  const reference = useRef();\n  const [data, setData] = useState();\n  const [selectedId, setSelectedId] = useState(0);\n  const [draggedContent, setDraggedContent] = useState(null);\n  const {\n    dataMarvel\n  } = useSelector(state => ({\n    dataMarvel: state.character\n  }));\n  dataMarvel.then(response => setData(response));\n  const dispatch = useDispatch();\n\n  const selectCharacter = index => {\n    setSelectedId(index);\n  };\n\n  useEffect(() => {\n    const getDataMarvel = () => {\n      dispatch(allActions.characterActions.requestGetMarvel());\n    };\n\n    getDataMarvel();\n  }, []);\n\n  const dragStart = index => {\n    setDraggedContent(index);\n  };\n\n  const captureDrag = (boxIndex, e) => {\n    e.preventDefault();\n    console.log(boxIndex);\n    setSelectedId(draggedContent);\n  };\n\n  const dragOver = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charecterList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, (data === null || data === void 0 ? void 0 : data.data) && data.data.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    ref: reference,\n    onDragStart: () => dragStart(index),\n    draggable: true,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: index === selectedId ? 'selectedCharacter' : '',\n    ref: reference,\n    onClick: () => selectCharacter(index),\n    alt: \"\",\n    src: `${item.thumbnail.path}.${item.thumbnail.extension}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"characterName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, item.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    onDrop: captureDrag.bind(this, 0),\n    onDragOver: dragOver,\n    className: \"characterInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, (data === null || data === void 0 ? void 0 : data.data) && data.data.length && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profileIntro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"infoImage\",\n    src: `${data.data[selectedId].thumbnail.path}.${data.data[selectedId].thumbnail.extension}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, data.data[selectedId].name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, data.data[selectedId].description))), /*#__PURE__*/React.createElement(CollapsibleComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comic-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CollapsibleHead, {\n    className: \"collapsible-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 68\n    }\n  }, \"Comics\")), /*#__PURE__*/React.createElement(CollapsibleContent, {\n    className: \"collapsible-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, data.data[selectedId].comics.available > 0 ? data.data[selectedId].comics.items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, item.name))) : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comic-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CollapsibleHead, {\n    className: \"collapsible-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 68\n    }\n  }, \"series\"), \" \"), /*#__PURE__*/React.createElement(CollapsibleContent, {\n    className: \"collapsible-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, data.data[selectedId].series.available > 0 ? data.data[selectedId].series.items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, item.name))) : '')))))), /*#__PURE__*/React.createElement(\"div\", {\n    onDrop: captureDrag.bind(this, 1),\n    onDragOver: dragOver,\n    className: \"characterInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, (data === null || data === void 0 ? void 0 : data.data) && data.data.length && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profileIntro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"infoImage\",\n    src: `${data.data[selectedId].thumbnail.path}.${data.data[selectedId].thumbnail.extension}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, data.data[selectedId].name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, data.data[selectedId].description))), /*#__PURE__*/React.createElement(CollapsibleComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comic-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CollapsibleHead, {\n    className: \"collapsible-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 58\n    }\n  }, \"Comics\")), /*#__PURE__*/React.createElement(CollapsibleContent, {\n    className: \"collapsible-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, data.data[selectedId].comics.available > 0 ? data.data[selectedId].comics.items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, item.name))) : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comic-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CollapsibleHead, {\n    className: \"collapsible-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 58\n    }\n  }, \"series\"), \" \"), /*#__PURE__*/React.createElement(CollapsibleContent, {\n    className: \"collapsible-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, data.data[selectedId].series.available > 0 ? data.data[selectedId].series.items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, item.name))) : ''))))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Loki_Office/Downloads/MarvelAPI/src/pages/listCharecter/index.js"],"names":["React","useState","useEffect","useRef","Container","useDispatch","useSelector","CollapsibleComponent","CollapsibleHead","CollapsibleContent","allActions","Header","Footer","ListCharacter","reference","data","setData","selectedId","setSelectedId","draggedContent","setDraggedContent","dataMarvel","state","character","then","response","dispatch","selectCharacter","index","getDataMarvel","characterActions","requestGetMarvel","dragStart","captureDrag","boxIndex","e","preventDefault","console","log","dragOver","map","item","thumbnail","path","extension","name","bind","length","description","comics","available","items","series"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Container } from './style';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  CollapsibleComponent,\r\n  CollapsibleHead,\r\n  CollapsibleContent\r\n} from \"react-collapsible-component\";\r\nimport allActions from '../../store/actions';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer'\r\n\r\n\r\nexport default function ListCharacter() {\r\n  const reference = useRef();\r\n  const [data, setData] = useState();\r\n  const [selectedId, setSelectedId] = useState(0);\r\n  const [draggedContent, setDraggedContent] = useState(null)\r\n  const { dataMarvel } = useSelector(state => ({\r\n    dataMarvel: state.character\r\n  }));\r\n  dataMarvel.then(response => setData(response));\r\n\r\n  const dispatch = useDispatch();\r\n  const selectCharacter = (index) => {\r\n    setSelectedId(index);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getDataMarvel = () => {\r\n      dispatch(allActions.characterActions.requestGetMarvel());\r\n    };\r\n    getDataMarvel();\r\n  }, []);\r\n\r\n\r\n\r\n  const dragStart = (index) => {\r\n    setDraggedContent(index);\r\n  }\r\n\r\n\r\n\r\n  const captureDrag = (boxIndex, e) => {\r\n    e.preventDefault();\r\n    console.log(boxIndex);\r\n    setSelectedId(draggedContent);\r\n  }\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <div className='charecterList' >\r\n          {\r\n            data?.data &&\r\n\r\n            data.data.map((item, index) =>\r\n              <div ref={reference} onDragStart={() => dragStart(index)} draggable={true} key={index} >\r\n                <div><img className={index === selectedId ? 'selectedCharacter' : ''} ref={reference} onClick={() => selectCharacter(index)} alt='' src={`${item.thumbnail.path}.${item.thumbnail.extension}`} /></div>\r\n                <div className='characterName'>{item.name}</div>\r\n              </div>)\r\n          }\r\n\r\n\r\n        </div>\r\n        <div onDrop={captureDrag.bind(this, 0)} onDragOver={dragOver} className='characterInfo'>\r\n\r\n          {\r\n            data?.data && data.data.length &&\r\n            <div className='row-content'>\r\n              <div className='profileIntro' >\r\n                <div>\r\n                  <img className='infoImage' src={`${data.data[selectedId].thumbnail.path}.${data.data[selectedId].thumbnail.extension}`} />\r\n                </div>\r\n                <div className='description' >\r\n                  <h2>{data.data[selectedId].name}</h2>\r\n                  <p>{data.data[selectedId].description}</p>\r\n                </div>\r\n              </div>\r\n              <CollapsibleComponent>\r\n                <>\r\n                  <div className='comic-holder'>\r\n\r\n                    <CollapsibleHead className='collapsible-head' ><h3>Comics</h3></CollapsibleHead>\r\n                    <CollapsibleContent className='collapsible-content' >\r\n\r\n                      {data.data[selectedId].comics.available > 0 ?\r\n                        data.data[selectedId].comics.items.map((item, index) =>\r\n                          <div key={index}>\r\n                            <li>{item.name}</li>\r\n                          </div>\r\n                        )\r\n                        : ''\r\n                      }\r\n                    </CollapsibleContent>\r\n\r\n                  </div>\r\n                  <div className='comic-holder'>\r\n\r\n                    <CollapsibleHead className='collapsible-head' ><h3>series</h3> </CollapsibleHead>\r\n                    <CollapsibleContent className='collapsible-content'>\r\n                      {data.data[selectedId].series.available > 0 ?\r\n                        data.data[selectedId].series.items.map((item, index) =>\r\n                          <div key={index}>\r\n                            <li>{item.name}</li>\r\n                          </div>\r\n                        )\r\n                        : ''\r\n                      }\r\n                    </CollapsibleContent>\r\n\r\n\r\n                  </div>\r\n                </>\r\n              </CollapsibleComponent>\r\n\r\n            </div>\r\n\r\n          }\r\n        </div>\r\n\r\n        <div onDrop={captureDrag.bind(this, 1)} onDragOver={dragOver} className='characterInfo'>\r\n\r\n{\r\n  data?.data && data.data.length &&\r\n  <div className='row-content'>\r\n    <div className='profileIntro' >\r\n      <div>\r\n        <img className='infoImage' src={`${data.data[selectedId].thumbnail.path}.${data.data[selectedId].thumbnail.extension}`} />\r\n      </div>\r\n      <div className='description' >\r\n        <h2>{data.data[selectedId].name}</h2>\r\n        <p>{data.data[selectedId].description}</p>\r\n      </div>\r\n    </div>\r\n    <CollapsibleComponent>\r\n      <>\r\n        <div className='comic-holder'>\r\n\r\n          <CollapsibleHead className='collapsible-head' ><h3>Comics</h3></CollapsibleHead>\r\n          <CollapsibleContent className='collapsible-content' >\r\n\r\n            {data.data[selectedId].comics.available > 0 ?\r\n              data.data[selectedId].comics.items.map((item, index) =>\r\n                <div key={index}>\r\n                  <li>{item.name}</li>\r\n                </div>\r\n              )\r\n              : ''\r\n            }\r\n          </CollapsibleContent>\r\n\r\n        </div>\r\n        <div className='comic-holder'>\r\n\r\n          <CollapsibleHead className='collapsible-head' ><h3>series</h3> </CollapsibleHead>\r\n          <CollapsibleContent className='collapsible-content'>\r\n            {data.data[selectedId].series.available > 0 ?\r\n              data.data[selectedId].series.items.map((item, index) =>\r\n                <div key={index}>\r\n                  <li>{item.name}</li>\r\n                </div>\r\n              )\r\n              : ''\r\n            }\r\n          </CollapsibleContent>\r\n\r\n\r\n        </div>\r\n      </>\r\n    </CollapsibleComponent>\r\n\r\n  </div>\r\n\r\n}\r\n</div>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}