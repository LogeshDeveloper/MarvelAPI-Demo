{"ast":null,"code":"var _jsxFileName = \"/Users/Loki_Office/Downloads/MarvelAPI/src/pages/Character/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport CardLoading from '../../components/CardLoading';\nimport CardSerie from '../../components/CardSerie';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport NotEmpty from '../../components/NotEmpty';\nimport ProfileLoading from '../../components/ProfileLoading';\nimport allActions from '../../store/actions';\nimport { Container } from './styles';\nimport Collapsible from '../../components/Collapsible Control';\nexport default function Character() {\n  var _data$dataUser, _data$data, _data$dataSeries;\n\n  const {\n    characterId\n  } = useParams();\n  const [data, setData] = useState({});\n  const {\n    dataMarvel\n  } = useSelector(state => ({\n    dataMarvel: state.character\n  }));\n  dataMarvel.then(response => setData(response));\n  const dispatch = useDispatch();\n  console.log(data);\n  useEffect(() => {\n    const getDataMarvel = () => {\n      dispatch(allActions.characterActions.requestGetMarvelId(characterId));\n    };\n\n    getDataMarvel();\n  }, []);\n  console.log(Response);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profileContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, (data === null || data === void 0 ? void 0 : data.loading) && /*#__PURE__*/React.createElement(ProfileLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }\n  }), data === null || data === void 0 ? void 0 : (_data$dataUser = data.dataUser) === null || _data$dataUser === void 0 ? void 0 : _data$dataUser.map(response => {\n    var _response$thumbnail, _response$thumbnail2;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: response === null || response === void 0 ? void 0 : response.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `${response === null || response === void 0 ? void 0 : (_response$thumbnail = response.thumbnail) === null || _response$thumbnail === void 0 ? void 0 : _response$thumbnail.path}.${response === null || response === void 0 ? void 0 : (_response$thumbnail2 = response.thumbnail) === null || _response$thumbnail2 === void 0 ? void 0 : _response$thumbnail2.extension}`,\n      alt: response === null || response === void 0 ? void 0 : response.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, response === null || response === void 0 ? void 0 : response.name), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, response === null || response === void 0 ? void 0 : response.description));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"series\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Series\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"serieContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, (data === null || data === void 0 ? void 0 : data.loading) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(CardLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }), \" \", /*#__PURE__*/React.createElement(CardLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(CardLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(CardLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }), \" \", /*#__PURE__*/React.createElement(CardLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(CardLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(CardLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }), \" \", /*#__PURE__*/React.createElement(CardLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(CardLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), (data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.length) !== 0 ? data === null || data === void 0 ? void 0 : (_data$dataSeries = data.dataSeries) === null || _data$dataSeries === void 0 ? void 0 : _data$dataSeries.map(response => /*#__PURE__*/React.createElement(CardSerie, {\n    data: response,\n    key: response === null || response === void 0 ? void 0 : response.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(NotEmpty, {\n    text: \"Series n\\xE3o encontrado!!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Loki_Office/Downloads/MarvelAPI/src/pages/Character/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","CardLoading","CardSerie","Footer","Header","NotEmpty","ProfileLoading","allActions","Container","Collapsible","Character","characterId","data","setData","dataMarvel","state","character","then","response","dispatch","console","log","getDataMarvel","characterActions","requestGetMarvelId","Response","loading","dataUser","map","id","thumbnail","path","extension","name","description","length","dataSeries"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport CardLoading from '../../components/CardLoading';\r\nimport CardSerie from '../../components/CardSerie';\r\nimport Footer from '../../components/Footer';\r\nimport Header from '../../components/Header';\r\nimport NotEmpty from '../../components/NotEmpty';\r\nimport ProfileLoading from '../../components/ProfileLoading';\r\nimport allActions from '../../store/actions';\r\nimport { Container } from './styles';\r\nimport Collapsible from '../../components/Collapsible Control'\r\n\r\nexport default function Character() {\r\n  const { characterId } = useParams();\r\n  const [data, setData] = useState({});\r\n  const { dataMarvel } = useSelector(state => ({\r\n    dataMarvel: state.character\r\n  }));\r\n  dataMarvel.then(response => setData(response));\r\n\r\n  const dispatch = useDispatch();\r\n  console.log(data);\r\n  useEffect(() => {\r\n    const getDataMarvel = () => {\r\n      dispatch(allActions.characterActions.requestGetMarvelId(characterId));\r\n    };\r\n    getDataMarvel();\r\n  }, []);\r\n\r\n  console.log(Response)\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <div className=\"profile\">\r\n          <div className=\"title\">Profile</div>\r\n          <div className=\"profileContent\">\r\n            {data?.loading && <ProfileLoading />}\r\n            {data?.dataUser?.map(response => (\r\n              <div key={response?.id}>\r\n                <img\r\n                  src={`${response?.thumbnail?.path}.${response?.thumbnail?.extension}`}\r\n                  alt={response?.name}\r\n                />\r\n                <span className=\"title-name\">{response?.name}</span>\r\n                <span>{response?.description}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"series\">\r\n          <div className=\"title\">Series</div>\r\n          <div className=\"serieContent\">\r\n            {data?.loading && (\r\n              <>\r\n                <CardLoading /> <CardLoading /> <CardLoading />\r\n                <CardLoading /> <CardLoading /> <CardLoading />\r\n                <CardLoading /> <CardLoading /> <CardLoading />\r\n                <CardLoading />\r\n              </>\r\n            )}\r\n            {data?.data?.length !== 0 ? (\r\n              data?.dataSeries?.map(response => (\r\n                <CardSerie data={response} key={response?.id} />\r\n              ))\r\n            ) : (\r\n                <NotEmpty text=\"Series não encontrado!!\" />\r\n              )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}