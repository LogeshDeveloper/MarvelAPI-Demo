{"ast":null,"code":"import _slicedToArray from\"/Users/Loki_Office/Downloads/MarvelAPI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import{Container}from'./style';import{useDispatch,useSelector}from'react-redux';import{CollapsibleComponent,CollapsibleHead,CollapsibleContent}from\"react-collapsible-component\";import allActions from'../../store/actions';import Header from'../../components/Header';import Footer from'../../components/Footer';export default function ListCharacter(){var reference=useRef();var _useState=useState(),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),selectedId=_useState4[0],setSelectedId=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),draggedContent=_useState6[0],setDraggedContent=_useState6[1];var _useSelector=useSelector(function(state){return{dataMarvel:state.character};}),dataMarvel=_useSelector.dataMarvel;dataMarvel.then(function(response){return setData(response);});var dispatch=useDispatch();var selectCharacter=function selectCharacter(index){setSelectedId(index);};useEffect(function(){var getDataMarvel=function getDataMarvel(){dispatch(allActions.characterActions.requestGetMarvel());};getDataMarvel();},[]);var dragStart=function dragStart(index){setDraggedContent(index);};var captureDrag=function captureDrag(e){e.preventDefault();setSelectedId(draggedContent);};var dragOver=function dragOver(e){e.preventDefault();};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",{className:\"charecterList\"},(data===null||data===void 0?void 0:data.data)&&data.data.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{ref:reference,onDragStart:function onDragStart(){return dragStart(index);},draggable:true,key:index},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{className:index===selectedId?'selectedCharacter':'',ref:reference,onClick:function onClick(){return selectCharacter(index);},alt:\"\",src:\"\".concat(item.thumbnail.path,\".\").concat(item.thumbnail.extension)})),/*#__PURE__*/React.createElement(\"div\",{className:\"characterName\"},item.name));})),/*#__PURE__*/React.createElement(\"div\",{onDrop:captureDrag,onDragOver:dragOver,className:\"characterInfo\"},(data===null||data===void 0?void 0:data.data)&&data.data.length&&/*#__PURE__*/React.createElement(\"div\",{className:\"row-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"profileIntro\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{className:\"infoImage\",src:\"\".concat(data.data[selectedId].thumbnail.path,\".\").concat(data.data[selectedId].thumbnail.extension)})),/*#__PURE__*/React.createElement(\"div\",{className:\"description\"},/*#__PURE__*/React.createElement(\"h2\",null,data.data[selectedId].name),/*#__PURE__*/React.createElement(\"p\",null,data.data[selectedId].description))),/*#__PURE__*/React.createElement(CollapsibleComponent,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"comic-holder\"},/*#__PURE__*/React.createElement(CollapsibleHead,{className:\"collapsible-head\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Comics\")),/*#__PURE__*/React.createElement(CollapsibleContent,{className:\"collapsible-content\"},data.data[selectedId].comics.available>0?data.data[selectedId].comics.items.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{key:index},/*#__PURE__*/React.createElement(\"li\",null,item.name));}):'')),/*#__PURE__*/React.createElement(\"div\",{className:\"comic-holder\"},/*#__PURE__*/React.createElement(CollapsibleHead,{className:\"collapsible-head\"},/*#__PURE__*/React.createElement(\"h3\",null,\"series\"),\" \"),/*#__PURE__*/React.createElement(CollapsibleContent,{className:\"collapsible-content\"},data.data[selectedId].series.available>0?data.data[selectedId].series.items.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{key:index},/*#__PURE__*/React.createElement(\"li\",null,item.name));}):''))))))),/*#__PURE__*/React.createElement(Footer,null));}","map":{"version":3,"sources":["/Users/Loki_Office/Downloads/MarvelAPI/src/pages/listCharecter/index.js"],"names":["React","useState","useEffect","useRef","Container","useDispatch","useSelector","CollapsibleComponent","CollapsibleHead","CollapsibleContent","allActions","Header","Footer","ListCharacter","reference","data","setData","selectedId","setSelectedId","draggedContent","setDraggedContent","state","dataMarvel","character","then","response","dispatch","selectCharacter","index","getDataMarvel","characterActions","requestGetMarvel","dragStart","captureDrag","e","preventDefault","dragOver","map","item","thumbnail","path","extension","name","length","description","comics","available","items","series"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Container } from './style';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  CollapsibleComponent,\r\n  CollapsibleHead,\r\n  CollapsibleContent\r\n} from \"react-collapsible-component\";\r\nimport allActions from '../../store/actions';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer'\r\n\r\n\r\nexport default function ListCharacter() {\r\n  const reference = useRef();\r\n  const [data, setData] = useState();\r\n  const [selectedId, setSelectedId] = useState(0);\r\n  const [draggedContent, setDraggedContent] = useState(null)\r\n  const { dataMarvel } = useSelector(state => ({\r\n    dataMarvel: state.character\r\n  }));\r\n  dataMarvel.then(response => setData(response));\r\n\r\n  const dispatch = useDispatch();\r\n  const selectCharacter = (index) => {\r\n    setSelectedId(index);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getDataMarvel = () => {\r\n      dispatch(allActions.characterActions.requestGetMarvel());\r\n    };\r\n    getDataMarvel();\r\n  }, []);\r\n\r\n\r\n\r\n  const dragStart = (index) => {\r\n    setDraggedContent(index);\r\n  }\r\n\r\n\r\n\r\n  const captureDrag = (e) => {\r\n    e.preventDefault();\r\n    setSelectedId(draggedContent);\r\n  }\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <div className='charecterList' >\r\n          {\r\n            data?.data &&\r\n\r\n            data.data.map((item, index) =>\r\n              <div ref={reference} onDragStart={() => dragStart(index)} draggable={true} key={index} >\r\n                <div><img className={index === selectedId ? 'selectedCharacter' : ''} ref={reference} onClick={() => selectCharacter(index)} alt='' src={`${item.thumbnail.path}.${item.thumbnail.extension}`} /></div>\r\n                <div className='characterName'>{item.name}</div>\r\n              </div>)\r\n          }\r\n\r\n\r\n        </div>\r\n        <div onDrop={captureDrag} onDragOver={dragOver} className='characterInfo'>\r\n\r\n          {\r\n            data?.data && data.data.length &&\r\n            <div className='row-content'>\r\n              <div className='profileIntro' >\r\n                <div>\r\n                  <img className='infoImage' src={`${data.data[selectedId].thumbnail.path}.${data.data[selectedId].thumbnail.extension}`} />\r\n                </div>\r\n                <div className='description' >\r\n                  <h2>{data.data[selectedId].name}</h2>\r\n                  <p>{data.data[selectedId].description}</p>\r\n                </div>\r\n              </div>\r\n              <CollapsibleComponent>\r\n                <>\r\n                  <div className='comic-holder'>\r\n\r\n                    <CollapsibleHead className='collapsible-head' ><h3>Comics</h3></CollapsibleHead>\r\n                    <CollapsibleContent className='collapsible-content' >\r\n\r\n                      {data.data[selectedId].comics.available > 0 ?\r\n                        data.data[selectedId].comics.items.map((item, index) =>\r\n                          <div key={index}>\r\n                            <li>{item.name}</li>\r\n                          </div>\r\n                        )\r\n                        : ''\r\n                      }\r\n                    </CollapsibleContent>\r\n\r\n                  </div>\r\n                  <div className='comic-holder'>\r\n\r\n                    <CollapsibleHead className='collapsible-head' ><h3>series</h3> </CollapsibleHead>\r\n                    <CollapsibleContent className='collapsible-content'>\r\n                      {data.data[selectedId].series.available > 0 ?\r\n                        data.data[selectedId].series.items.map((item, index) =>\r\n                          <div key={index}>\r\n                            <li>{item.name}</li>\r\n                          </div>\r\n                        )\r\n                        : ''\r\n                      }\r\n                    </CollapsibleContent>\r\n\r\n\r\n                  </div>\r\n                </>\r\n              </CollapsibleComponent>\r\n\r\n            </div>\r\n\r\n          }\r\n        </div>\r\n\r\n\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}