{"ast":null,"code":"var _jsxFileName = \"/Users/Loki_Office/Downloads/MarvelAPI/src/components/Header/index.js\";\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { FaSearch } from 'react-icons/all';\nimport { useDispatch } from 'react-redux';\nimport logo from '../../assets/logo.png';\nimport allActions from '../../store/actions';\nimport { Container } from './styles';\nexport default function Header({\n  showSearch\n}) {\n  const [search, setSearch] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const getDataMarvel = () => {\n      showSearch && (search === '' ? dispatch(allActions.characterActions.requestGetMarvel()) : dispatch(allActions.characterActions.requestSearchMarvel(search)));\n    };\n\n    getDataMarvel();\n  }, [search]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Marvel App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), showSearch && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setSearch(e.target.value),\n    value: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FaSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })));\n}\nHeader.prototype = {\n  showSearch: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/Loki_Office/Downloads/MarvelAPI/src/components/Header/index.js"],"names":["PropTypes","React","useState","useEffect","FaSearch","useDispatch","logo","allActions","Container","Header","showSearch","search","setSearch","dispatch","getDataMarvel","characterActions","requestGetMarvel","requestSearchMarvel","e","target","value","prototype","bool"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAAgC;AAC7C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMW,QAAQ,GAAGR,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,aAAa,GAAG,MAAM;AAC1BJ,MAAAA,UAAU,KACPC,MAAM,KAAK,EAAX,GACGE,QAAQ,CAACN,UAAU,CAACQ,gBAAX,CAA4BC,gBAA5B,EAAD,CADX,GAEGH,QAAQ,CAACN,UAAU,CAACQ,gBAAX,CAA4BE,mBAA5B,CAAgDN,MAAhD,CAAD,CAHJ,CAAV;AAID,KALD;;AAMAG,IAAAA,aAAa;AACd,GARQ,EAQN,CAACH,MAAD,CARM,CAAT;AAUA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEL,IAAV;AAAgB,IAAA,GAAG,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGI,UAAU,iBACT;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAEQ,CAAC,IAAIN,SAAS,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAGE,IAAA,KAAK,EAAET,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAHJ,CADF;AAeD;AAEDF,MAAM,CAACY,SAAP,GAAmB;AACjBX,EAAAA,UAAU,EAAEV,SAAS,CAACsB;AADL,CAAnB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FaSearch } from 'react-icons/all';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport logo from '../../assets/logo.png';\r\nimport allActions from '../../store/actions';\r\nimport { Container } from './styles';\r\n\r\nexport default function Header({ showSearch }) {\r\n  const [search, setSearch] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const getDataMarvel = () => {\r\n      showSearch &&\r\n        (search === ''\r\n          ? dispatch(allActions.characterActions.requestGetMarvel())\r\n          : dispatch(allActions.characterActions.requestSearchMarvel(search)));\r\n    };\r\n    getDataMarvel();\r\n  }, [search]);\r\n\r\n  return (\r\n    <Container>\r\n      <img src={logo} alt=\"Marvel App\" />\r\n      {showSearch && (\r\n        <div className=\"containerSearch\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => setSearch(e.target.value)}\r\n            value={search}\r\n          />\r\n          <FaSearch />\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nHeader.prototype = {\r\n  showSearch: PropTypes.bool\r\n};\r\n"]},"metadata":{},"sourceType":"module"}